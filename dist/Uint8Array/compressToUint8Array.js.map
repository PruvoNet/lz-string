{"version":3,"file":"compressToUint8Array.js","sources":["../../src/Uint8Array/compressToUint8Array.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2013 Pieroxy <pieroxy@pieroxy.net>\n *\n * SPDX-License-Identifier: MIT\n */\n\nimport { compress } from \"../raw/compress\";\n\nexport function compressToUint8Array(uncompressed: string | null): Uint8Array {\n    const compressed: string = compress(uncompressed);\n    // We cannot use convertToUint8Array as that changes the behaviour to support odd length of output!\n    const buf: Uint8Array = new Uint8Array(compressed.length * 2); // 2 bytes per character\n\n    for (let i = 0, TotalLen = compressed.length; i < TotalLen; i++) {\n        const current_value = compressed.charCodeAt(i);\n        buf[i * 2] = current_value >>> 8;\n        buf[i * 2 + 1] = current_value % 256;\n    }\n\n    return buf;\n}\n"],"names":["compressToUint8Array","uncompressed","compressed","compress","buf","i","TotalLen","current_value"],"mappings":";AAQO,SAASA,EAAqBC,GAAyC;AACpE,QAAAC,IAAqBC,EAASF,CAAY,GAE1CG,IAAkB,IAAI,WAAWF,EAAW,SAAS,CAAC;AAE5D,WAASG,IAAI,GAAGC,IAAWJ,EAAW,QAAQG,IAAIC,GAAUD,KAAK;AACvD,UAAAE,IAAgBL,EAAW,WAAWG,CAAC;AACzC,IAAAD,EAAAC,IAAI,CAAC,IAAIE,MAAkB,GAC/BH,EAAIC,IAAI,IAAI,CAAC,IAAIE,IAAgB;AAAA,EACrC;AAEO,SAAAH;AACX;"}