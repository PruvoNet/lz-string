{"version":3,"file":"compressToCustom.js","sources":["../../src/custom/compressToCustom.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2013 Pieroxy <pieroxy@pieroxy.net>\n *\n * SPDX-License-Identifier: MIT\n */\n\nimport { compress } from \"../raw/compress\";\n\nexport function compressToCustom(uncompressed: string | null, dict: string): string {\n    if (uncompressed == null) return \"\";\n\n    const compressed: string = compress(uncompressed);\n    const charsPerUnicodeChar: number = Math.ceil(Math.log(65536) / Math.log(dict.length));\n    let res: string = \"\";\n\n    for (let i = 0, TotalLen = compressed.length; i < TotalLen; i++) {\n        let current_value = compressed.charCodeAt(i);\n\n        for (let j = charsPerUnicodeChar - 1; j >= 0; j--) {\n            const selector = Math.floor(current_value / Math.pow(dict.length, j));\n            current_value = current_value % Math.pow(dict.length, j);\n            res += dict.charAt(selector);\n        }\n    }\n\n    return res;\n}\n"],"names":["compressToCustom","uncompressed","dict","compressed","compress","charsPerUnicodeChar","res","i","TotalLen","current_value","j","selector"],"mappings":";AAQgB,SAAAA,EAAiBC,GAA6BC,GAAsB;AAChF,MAAID,KAAgB;AAAa,WAAA;AAE3B,QAAAE,IAAqBC,EAASH,CAAY,GAC1CI,IAA8B,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAIH,EAAK,MAAM,CAAC;AACrF,MAAII,IAAc;AAElB,WAASC,IAAI,GAAGC,IAAWL,EAAW,QAAQI,IAAIC,GAAUD,KAAK;AACzD,QAAAE,IAAgBN,EAAW,WAAWI,CAAC;AAE3C,aAASG,IAAIL,IAAsB,GAAGK,KAAK,GAAGA,KAAK;AACzC,YAAAC,IAAW,KAAK,MAAMF,IAAgB,KAAK,IAAIP,EAAK,QAAQQ,CAAC,CAAC;AACpE,MAAAD,IAAgBA,IAAgB,KAAK,IAAIP,EAAK,QAAQQ,CAAC,GAChDJ,KAAAJ,EAAK,OAAOS,CAAQ;AAAA,IAC/B;AAAA,EACJ;AAEO,SAAAL;AACX;"}