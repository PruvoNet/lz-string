{"version":3,"file":"_compress.js","sources":["../src/_compress.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2013 Pieroxy <pieroxy@pieroxy.net>\n *\n * SPDX-License-Identifier: MIT\n */\n\nexport type Dictionary = Record<string, number>;\nexport type PendingDictionary = Record<string, true>;\n\nexport function _compress(uncompressed: null, bitsPerChar: number, getCharFromInt: (a: number) => string): \"\";\nexport function _compress(uncompressed: string, bitsPerChar: number, getCharFromInt: (a: number) => string): string;\nexport function _compress(\n    uncompressed: string | null,\n    bitsPerChar: number,\n    getCharFromInt: (a: number) => string,\n): string {\n    if (uncompressed == null) return \"\";\n\n    let i: number;\n    let value: number;\n    const context_dictionary: Dictionary = {};\n    const context_dictionaryToCreate: PendingDictionary = {};\n    let context_c: string = \"\";\n    let context_wc: string = \"\";\n    let context_w: string = \"\";\n    let context_enlargeIn: number = 2; // Compensate for the first entry which should not count\n    let context_dictSize: number = 3;\n    let context_numBits: number = 2;\n    const context_data: string[] = [];\n    let context_data_val: number = 0;\n    let context_data_position: number = 0;\n    let ii: number;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n        context_c = uncompressed.charAt(ii);\n        if (!Object.prototype.hasOwnProperty.call(context_dictionary, context_c)) {\n            context_dictionary[context_c] = context_dictSize++;\n            context_dictionaryToCreate[context_c] = true;\n        }\n        context_wc = context_w + context_c;\n        if (Object.prototype.hasOwnProperty.call(context_dictionary, context_wc)) {\n            context_w = context_wc;\n        } else {\n            if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n                if (context_w.charCodeAt(0) < 256) {\n                    for (i = 0; i < context_numBits; i++) {\n                        context_data_val = context_data_val << 1;\n                        if (context_data_position == bitsPerChar - 1) {\n                            context_data_position = 0;\n                            context_data.push(getCharFromInt(context_data_val));\n                            context_data_val = 0;\n                        } else {\n                            context_data_position++;\n                        }\n                    }\n                    value = context_w.charCodeAt(0);\n                    for (i = 0; i < 8; i++) {\n                        context_data_val = (context_data_val << 1) | (value & 1);\n                        if (context_data_position == bitsPerChar - 1) {\n                            context_data_position = 0;\n                            context_data.push(getCharFromInt(context_data_val));\n                            context_data_val = 0;\n                        } else {\n                            context_data_position++;\n                        }\n                        value = value >> 1;\n                    }\n                } else {\n                    value = 1;\n                    for (i = 0; i < context_numBits; i++) {\n                        context_data_val = (context_data_val << 1) | value;\n                        if (context_data_position == bitsPerChar - 1) {\n                            context_data_position = 0;\n                            context_data.push(getCharFromInt(context_data_val));\n                            context_data_val = 0;\n                        } else {\n                            context_data_position++;\n                        }\n                        value = 0;\n                    }\n                    value = context_w.charCodeAt(0);\n                    for (i = 0; i < 16; i++) {\n                        context_data_val = (context_data_val << 1) | (value & 1);\n                        if (context_data_position == bitsPerChar - 1) {\n                            context_data_position = 0;\n                            context_data.push(getCharFromInt(context_data_val));\n                            context_data_val = 0;\n                        } else {\n                            context_data_position++;\n                        }\n                        value = value >> 1;\n                    }\n                }\n                context_enlargeIn--;\n                if (context_enlargeIn == 0) {\n                    context_enlargeIn = Math.pow(2, context_numBits);\n                    context_numBits++;\n                }\n                delete context_dictionaryToCreate[context_w];\n            } else {\n                value = context_dictionary[context_w];\n                for (i = 0; i < context_numBits; i++) {\n                    context_data_val = (context_data_val << 1) | (value & 1);\n                    if (context_data_position == bitsPerChar - 1) {\n                        context_data_position = 0;\n                        context_data.push(getCharFromInt(context_data_val));\n                        context_data_val = 0;\n                    } else {\n                        context_data_position++;\n                    }\n                    value = value >> 1;\n                }\n            }\n            context_enlargeIn--;\n            if (context_enlargeIn == 0) {\n                context_enlargeIn = Math.pow(2, context_numBits);\n                context_numBits++;\n            }\n            // Add wc to the dictionary.\n            context_dictionary[context_wc] = context_dictSize++;\n            context_w = String(context_c);\n        }\n    }\n    // Output the code for w.\n    if (context_w !== \"\") {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n            if (context_w.charCodeAt(0) < 256) {\n                for (i = 0; i < context_numBits; i++) {\n                    context_data_val = context_data_val << 1;\n                    if (context_data_position == bitsPerChar - 1) {\n                        context_data_position = 0;\n                        context_data.push(getCharFromInt(context_data_val));\n                        context_data_val = 0;\n                    } else {\n                        context_data_position++;\n                    }\n                }\n                value = context_w.charCodeAt(0);\n                for (i = 0; i < 8; i++) {\n                    context_data_val = (context_data_val << 1) | (value & 1);\n                    if (context_data_position == bitsPerChar - 1) {\n                        context_data_position = 0;\n                        context_data.push(getCharFromInt(context_data_val));\n                        context_data_val = 0;\n                    } else {\n                        context_data_position++;\n                    }\n                    value = value >> 1;\n                }\n            } else {\n                value = 1;\n                for (i = 0; i < context_numBits; i++) {\n                    context_data_val = (context_data_val << 1) | value;\n                    if (context_data_position == bitsPerChar - 1) {\n                        context_data_position = 0;\n                        context_data.push(getCharFromInt(context_data_val));\n                        context_data_val = 0;\n                    } else {\n                        context_data_position++;\n                    }\n                    value = 0;\n                }\n                value = context_w.charCodeAt(0);\n                for (i = 0; i < 16; i++) {\n                    context_data_val = (context_data_val << 1) | (value & 1);\n                    if (context_data_position == bitsPerChar - 1) {\n                        context_data_position = 0;\n                        context_data.push(getCharFromInt(context_data_val));\n                        context_data_val = 0;\n                    } else {\n                        context_data_position++;\n                    }\n                    value = value >> 1;\n                }\n            }\n            context_enlargeIn--;\n            if (context_enlargeIn == 0) {\n                context_enlargeIn = Math.pow(2, context_numBits);\n                context_numBits++;\n            }\n            delete context_dictionaryToCreate[context_w];\n        } else {\n            value = context_dictionary[context_w];\n            for (i = 0; i < context_numBits; i++) {\n                context_data_val = (context_data_val << 1) | (value & 1);\n                if (context_data_position == bitsPerChar - 1) {\n                    context_data_position = 0;\n                    context_data.push(getCharFromInt(context_data_val));\n                    context_data_val = 0;\n                } else {\n                    context_data_position++;\n                }\n                value = value >> 1;\n            }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n        }\n    }\n    // Mark the end of the stream\n    value = 2;\n    for (i = 0; i < context_numBits; i++) {\n        context_data_val = (context_data_val << 1) | (value & 1);\n        if (context_data_position == bitsPerChar - 1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n        } else {\n            context_data_position++;\n        }\n        value = value >> 1;\n    }\n    // Flush the last char\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        context_data_val = context_data_val << 1;\n        if (context_data_position == bitsPerChar - 1) {\n            context_data.push(getCharFromInt(context_data_val));\n            break;\n        } else context_data_position++;\n    }\n    return context_data.join(\"\");\n}\n"],"names":["_compress","uncompressed","bitsPerChar","getCharFromInt","i","value","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","ii"],"mappings":"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"}